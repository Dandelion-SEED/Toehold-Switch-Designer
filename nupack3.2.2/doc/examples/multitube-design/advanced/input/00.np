# Generated by designgen.py
# Design based on Hochrein et al. JACS 2013, 135, 17322-17330
# DOI: 10.1021/ja404676x
# Tag: 1 orthogonal conditional dicer transducers
temperature[C] = 37.0
material = rna1999


# Gate 

# domains for 
domain a = N6
domain c = N8
domain b = N4
domain w = N2
domain y = N4
domain x = N12
domain z = N3
domain s = N5

# strands for 
strand Cout_s = w x y s
strand A_s = c* b* a* z* y*
strand A_toe_s = c*
strand C_s = w x y s a* z* y* x* w*
strand C_loop_s = s a* z*
strand B_s = x y z a b
strand Xs_s = a b c

# GC content constraints
match Cout_s_m = S23
Cout_s_m.matchrange[frac] Cout_s = [0.45, 0.55]
match A_s_m = S25
A_s_m.matchrange[frac] A_s = [0.45, 0.55]
match C_s_m = S50
C_s_m.matchrange[frac] C_s = [0.45, 0.55]
match C_loop_s_m = S14
C_loop_s_m.matchrange[frac] C_loop_s = [0.45, 0.55]
match B_s_m = S29
B_s_m.matchrange[frac] B_s = [0.45, 0.55]
match Xs_s_m = S18
Xs_s_m.matchrange[frac] Xs_s = [0.45, 0.55]

# sequence links for 
complex C = C_s
complex B = B_s
complex C_loop = C_loop_s
complex A_B = A_s B_s
complex X = Xs_s
complex X_A = Xs_s A_s
complex C_out = Cout_s
complex B_C = B_s C_s
complex A_toe = A_toe_s

# structures for 
C.structure = D2 D12 D4( U5 U6 U3 )
B.structure = U12 U4 U3 U6 U4
C_loop.structure = U14
A_B.structure = U8 D4 D6 D3 D4(+ U12)
X.structure = U18
X_A.structure = D6 D4 D8(+) U3 U4
C_out.structure = U23
B_C.structure = D12 D4 D3 D6 (U4 + U2 U12 U4 U5) U2
A_toe.structure = U8

# on-target tubes for 
tube Step_2 = B_C
Step_2.B_C.conc[M] = 1e-08
Step_2.offtargets = {maxsize = 2} + {B, C}

tube Step_1 = X_A B
Step_1.X_A.conc[M] = 1e-08
Step_1.B.conc[M] = 1e-08
Step_1.offtargets = {maxsize = 2} + {X, A_B}

tube Step_0 = C X A_B
Step_0.C.conc[M] = 1e-08
Step_0.X.conc[M] = 1e-08
Step_0.A_B.conc[M] = 1e-08
Step_0.offtargets = {maxsize = 2} + {A_s, B_s} - {X_A}


# sources lines for 
source tpm3 = gaacactattagctatttgtagtactctaaagaggactgcagaacgcatcgcagtagtgg\
tgaaaagccgtgcgtgcgcgtgaaacatctgatcctcacgttacttccactcgctctgcg\
tttgacttgttggcggggcgttggtgccttggacttttttttcctccttctcttcttcgc\
ggctcggtccactacgctgctcgagaggaatctgctttattcgaccacactactcctaaa\
gtaacacattaaaatggccggatcaaacagcatcgatgcagttaagagaaaaatcaaagt\
tttacaacagcaagcagatgaggcagaagaaagagccgagattttgcagagacaggtcga\
ggaggagaagcgtgccagggagcaggctgaggcagaggtggcttctctgaacaggcgtat\
ccagctggttgaggaggagttggatcgtgctcaggagagactggccacagccctgcaaaa\
gctggaggaagccgagaaggccgcagatgagagcgagagagggatgaaggtgattgagaa\
cagggctctgaaggatgaggagaagatggagctgcaggagatccagcttaaggaggccaa\
gcacattgctgaggaggctgaccgcaaatatgaagaggtggctcgtaagctggtgatcgt\
tgagggagagttggagcgtacagaggagagagcagagcttgcagagagccatgtcaagca\
gatggaggaggagctgagagctcttgaccagacactgaagactcttcaggcctcagagga\
gaagtattcccagaaggaggacaagtatgaggaagaaatcaagatcctcactgataagct\
gaaggaggctgagacccgtgcagagtttgctgagaggtctgtggccaaactggagaaaac\
cattgatgatttggaagagaaactgagagatgctaaagaggagaacatcaagatccatgc\
tactttggaccagaccctgagcgagctcaatagtttctaaagaagacctggagcagaaaa\
aaggccttttcttcccttcttgactccctcatctcattttggtttctttgtctctgcaca\
tctgattctccccctttttttttcttctcttcttctgctggaggataagctcaccaagcc\
aaccagcaaaaatgtggtgcctctcaatttttccaaactactattccaagtgatttgaga\
aatgatctactacgatactcctcaagagtcaaatgttgacctcggggagccttttttggt\
attgctccatgatcagagctttacgagctagtgttttttctgcatatcagcccaaactct\
caatgataattttactggaggctgatttttgtaaaattttgtgccataaaagccttgttg\
gcttgtctcttgcttggctttagatcattctcaagccatttttttcctgctgttgctctg\
acacaggttgtttttgctggtcttgttggtgcctgatccactgctatccttttcacacct\
cttttttttttttcttcatcctgcacaagtttctgctgcctgttagtcggcatcaccggt\
tttgggaccaaaaccacatcatgtggtctgtaacagtatgcacaaccatgccgtgaggac\
caaatttgttttattattgttattattattaaaagcctttgcttccattcggagtttgtt\
tttttgagtaatatatgtattcattgtttgggtcgaatccccttgcttttttaacacaaa\
tgttttgcaaaccactatttgaaatggtgcactgttatgggcttatggtgagcagatgag\
gccaagtcatggtttcttcattataattttcttttcatttgctttaaagagccatattct\
acccagggaagaaaggttgaagttgttttgtttttttaccgtgagttcaaagcagtggca\
ctgccagatttaaaaggttcaaaagccgtgcagatctaaaatatgtattatgaacacagt\
aatgggagcgaattgtaacacttaatagtatacaaatttaagaaacaggggtgaacacat\
agttttaactggaaaaagcccacaatgatgtgtaatcactttgttactgtctgtatcttg\
tgtaatgatacctaaattctttttttaaataaaaaccatgatttttactgtcactgaaaa\
aaaaaaaaaaaaaaa\

window tpm3_window = a b c
tpm3_window.source = tpm3

source desm = catttacacagcgtacaaacccaacaggcccagtcatgagcacgaaatattcagcctccg\
ccgagtcggcgtcctcttaccgccgcacctttggctcaggtttgggctcctctattttcg\
ccggccacggttcctcaggttcctctggctcctcaagactgacctccagagtttacgagg\
tgaccaagagctccgcttctccccatttttccagccaccgtgcgtccggctctttcggag\
gtggctcggtggtccgttcctacgctggccttggtgagaagctggatttcaatctggctg\
atgccataaaccaggacttcctcaacacgcgtactaatgagaaggccgagctccagcacc\
tcaatgaccgcttcgccagctacatcgagaaggtgcgcttcctcgagcagcagaactctg\
ccctgacggtggagattgagcgtctgcggggtcgcgagcccacccgtattgcagagctgt\
acgaggaggagatgagagagctgcgcggacaggtggaggcactgaccaatcagagatccc\
gtgtggagatcgagagggacaacctagtcgatgacctacagaaactaaagctcagacttc\
aagaggagatccaccagaaagaggaagctgaaaacaacctttctgctttcagagctgatg\
tcgatgctgccactctggccaggctggacctggaaagacgtatcgagggtcttcacgaag\
agattgcattcctcaggaagattcatgaggaggagatccgtgagctgcagaaccagatgc\
aggagagtcaggtgcagatccaaatggacatgtccaaaccagacctgactgcggccctca\
gagacattcgcctgcagtacgaggctatcgctgccaagaatatcagcgaggccgaggact\
ggtataagtctaaggtttcagatttgaaccaggcagtgaacaagaataacgaggctctca\
gagaagccaagcaggagaccatgcagttccgtcaccagctccagtcctacacctgcgaga\
ttgactctctcaagggcaccaatgagtctctgaggaggcaaatgagtgagatggaggagc\
ggctgggacgtgaggccggtggttatcaggacactatcgcccgtctcgaggctgagatcg\
caaaaatgaaagacgagatggcccgccacctccgcgagtaccaggatctgctgaatgtga\
agatggctctggatgtggagatcgccacctacaggaagcttttggaaggagaggagagca\
ggatctcgctgcccgtgcagtccttttcatccctgagtttcagagagagcagtccagagc\
agcaccaccaccagcagcagcaaccacaacgctcatctgaagtccactccaagaaaacag\
tcctgatcaagaccatcgagacccgcgatggcgaggtcgtcagcgagtccacacagcacc\
agcaggacgtcatgtaaagcttgagaaacagatcgagtttcacagaatgccttgcatttt\
cactgatggcctcaggcttttttaagcacacacccagtattgccgtgacccattaccgca\
tgtggatgacgcatggagacaaaaggaaagtgagctgaaaaaccagagggaggaaaagtg\
gaatggtgtgatgctgagcgttcagaaagtggccagatgagctcagagtttctgatttaa\
tgaatgtatgtgtgcgtgtgtgtgtggttgggtcatatctgagacactgttccacagcaa\
caaaaacaataaaattcactgtattttctcctaaaaaaaaaaaaaaaaaaaaaaaaaa\

window desm_window = w x y z
desm_window.source = desm


# Prevented patterns
prevent = AAAA,CCCC,GGGG,UUUU,MMMMMM,KKKKKK,WWWWWW,SSSSSS,RRRRRR,YYYYYY

# global orthogonality tube
tube Crosstalk = A_B C X B C_out C_loop A_toe
Crosstalk.offtargets = {maxsize = 2} - {X_A, B_C, Xs_s A_toe_s, B_s C_loop_s}
Crosstalk.A_B.conc[M] = 1e-08
Crosstalk.C.conc[M] = 1e-08
Crosstalk.X.conc[M] = 1e-08
Crosstalk.B.conc[M] = 1e-08
Crosstalk.C_out.conc[M] = 1e-08
Crosstalk.C_loop.conc[M] = 1e-08
Crosstalk.A_toe.conc[M] = 1e-08
Crosstalk.weight[frac] = 1

# Global stop condition
stop[%] = 2
